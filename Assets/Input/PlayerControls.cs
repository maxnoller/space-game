//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.1
//     from Assets/Input/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""Ship"",
            ""id"": ""f79f962d-e67c-4e1e-8587-745b8d9333be"",
            ""actions"": [
                {
                    ""name"": ""Roll"",
                    ""type"": ""PassThrough"",
                    ""id"": ""42726735-66bf-4463-a9e1-9335b441ae7a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Thrust"",
                    ""type"": ""PassThrough"",
                    ""id"": ""3e3df15b-2320-4c20-a057-f9b3cbc02219"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PitchYaw"",
                    ""type"": ""PassThrough"",
                    ""id"": ""9a148357-6772-4c71-83ac-95c826a5e97b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Brake"",
                    ""type"": ""PassThrough"",
                    ""id"": ""d6847121-d42e-4805-aa9e-b62121d61dd4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Strafe"",
                    ""type"": ""Button"",
                    ""id"": ""6f795779-a264-4fcb-844d-58da8332da52"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CameraSide"",
                    ""type"": ""Button"",
                    ""id"": ""f8ff57cd-fb0c-4818-ab06-8ad54a18c24c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CameraUpDown"",
                    ""type"": ""Button"",
                    ""id"": ""4b66bdc8-b540-4cf1-8d65-12a90e0d625a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CameraReset"",
                    ""type"": ""Button"",
                    ""id"": ""e07a1a21-aab2-42ba-97f3-ad5f1768102c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseControl"",
                    ""type"": ""Button"",
                    ""id"": ""aa56fbe6-1f05-4060-88b2-4bd178bd76d5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""RollKeyboard"",
                    ""id"": ""b86bf22b-c244-4496-b8e1-a840d013f090"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Roll"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""45ba7e51-7e6b-4b52-8c50-1f112bdb7e4d"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Roll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""968555bb-a59c-4fe7-9ba7-59bcc3189b3f"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Roll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""e720ffba-fc6d-41db-93d6-412a775b118a"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PitchYaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b57cd629-7040-4c2c-89eb-c4f644553f5e"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Brake"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""StrafeKeyboard"",
                    ""id"": ""f1d33cd4-0c0d-4b4e-be85-6d8e4758b6ad"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Strafe"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""a227d13c-617c-4cd4-bf86-2b889177fccf"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Strafe"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""f01ba892-0c12-444b-969a-b539c36fbc95"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Strafe"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""CameraSideNum"",
                    ""id"": ""19d55af0-3ff1-415d-be7b-af3995f68ef8"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraSide"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""b9a63515-1347-4c39-9950-f95a56800c2a"",
                    ""path"": ""<Keyboard>/numpad4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraSide"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""a6e15804-e30d-430d-a05a-278d1326dad9"",
                    ""path"": ""<Keyboard>/numpad6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraSide"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""CameraUpDownNum"",
                    ""id"": ""86fa748b-f7a5-4c1e-9b51-5d953e3e888a"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraUpDown"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""dcab5afd-c916-42fa-9ccf-9b356c6f27e9"",
                    ""path"": ""<Keyboard>/numpad8"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraUpDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""cac1a9a5-acf4-4f7c-b6a1-37a5389e06c8"",
                    ""path"": ""<Keyboard>/numpad2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraUpDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""ad811143-32cf-4786-b535-4b7c39389ed1"",
                    ""path"": ""<Keyboard>/numpad5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraReset"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""MouseControlComb"",
                    ""id"": ""074401bd-25fb-4d7c-b06d-0b8fc769170d"",
                    ""path"": ""ButtonWithOneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseControl"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""c8320ba3-7bf7-4f15-b99c-bc4b3c2b7e6f"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseControl"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""button"",
                    ""id"": ""dac92d66-9461-4be8-a88f-bc82e1be47ba"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseControl"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""89fdb57a-d495-4099-9668-7b160bd3579b"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Thrust"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Ship
        m_Ship = asset.FindActionMap("Ship", throwIfNotFound: true);
        m_Ship_Roll = m_Ship.FindAction("Roll", throwIfNotFound: true);
        m_Ship_Thrust = m_Ship.FindAction("Thrust", throwIfNotFound: true);
        m_Ship_PitchYaw = m_Ship.FindAction("PitchYaw", throwIfNotFound: true);
        m_Ship_Brake = m_Ship.FindAction("Brake", throwIfNotFound: true);
        m_Ship_Strafe = m_Ship.FindAction("Strafe", throwIfNotFound: true);
        m_Ship_CameraSide = m_Ship.FindAction("CameraSide", throwIfNotFound: true);
        m_Ship_CameraUpDown = m_Ship.FindAction("CameraUpDown", throwIfNotFound: true);
        m_Ship_CameraReset = m_Ship.FindAction("CameraReset", throwIfNotFound: true);
        m_Ship_MouseControl = m_Ship.FindAction("MouseControl", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Ship
    private readonly InputActionMap m_Ship;
    private IShipActions m_ShipActionsCallbackInterface;
    private readonly InputAction m_Ship_Roll;
    private readonly InputAction m_Ship_Thrust;
    private readonly InputAction m_Ship_PitchYaw;
    private readonly InputAction m_Ship_Brake;
    private readonly InputAction m_Ship_Strafe;
    private readonly InputAction m_Ship_CameraSide;
    private readonly InputAction m_Ship_CameraUpDown;
    private readonly InputAction m_Ship_CameraReset;
    private readonly InputAction m_Ship_MouseControl;
    public struct ShipActions
    {
        private @PlayerControls m_Wrapper;
        public ShipActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Roll => m_Wrapper.m_Ship_Roll;
        public InputAction @Thrust => m_Wrapper.m_Ship_Thrust;
        public InputAction @PitchYaw => m_Wrapper.m_Ship_PitchYaw;
        public InputAction @Brake => m_Wrapper.m_Ship_Brake;
        public InputAction @Strafe => m_Wrapper.m_Ship_Strafe;
        public InputAction @CameraSide => m_Wrapper.m_Ship_CameraSide;
        public InputAction @CameraUpDown => m_Wrapper.m_Ship_CameraUpDown;
        public InputAction @CameraReset => m_Wrapper.m_Ship_CameraReset;
        public InputAction @MouseControl => m_Wrapper.m_Ship_MouseControl;
        public InputActionMap Get() { return m_Wrapper.m_Ship; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ShipActions set) { return set.Get(); }
        public void SetCallbacks(IShipActions instance)
        {
            if (m_Wrapper.m_ShipActionsCallbackInterface != null)
            {
                @Roll.started -= m_Wrapper.m_ShipActionsCallbackInterface.OnRoll;
                @Roll.performed -= m_Wrapper.m_ShipActionsCallbackInterface.OnRoll;
                @Roll.canceled -= m_Wrapper.m_ShipActionsCallbackInterface.OnRoll;
                @Thrust.started -= m_Wrapper.m_ShipActionsCallbackInterface.OnThrust;
                @Thrust.performed -= m_Wrapper.m_ShipActionsCallbackInterface.OnThrust;
                @Thrust.canceled -= m_Wrapper.m_ShipActionsCallbackInterface.OnThrust;
                @PitchYaw.started -= m_Wrapper.m_ShipActionsCallbackInterface.OnPitchYaw;
                @PitchYaw.performed -= m_Wrapper.m_ShipActionsCallbackInterface.OnPitchYaw;
                @PitchYaw.canceled -= m_Wrapper.m_ShipActionsCallbackInterface.OnPitchYaw;
                @Brake.started -= m_Wrapper.m_ShipActionsCallbackInterface.OnBrake;
                @Brake.performed -= m_Wrapper.m_ShipActionsCallbackInterface.OnBrake;
                @Brake.canceled -= m_Wrapper.m_ShipActionsCallbackInterface.OnBrake;
                @Strafe.started -= m_Wrapper.m_ShipActionsCallbackInterface.OnStrafe;
                @Strafe.performed -= m_Wrapper.m_ShipActionsCallbackInterface.OnStrafe;
                @Strafe.canceled -= m_Wrapper.m_ShipActionsCallbackInterface.OnStrafe;
                @CameraSide.started -= m_Wrapper.m_ShipActionsCallbackInterface.OnCameraSide;
                @CameraSide.performed -= m_Wrapper.m_ShipActionsCallbackInterface.OnCameraSide;
                @CameraSide.canceled -= m_Wrapper.m_ShipActionsCallbackInterface.OnCameraSide;
                @CameraUpDown.started -= m_Wrapper.m_ShipActionsCallbackInterface.OnCameraUpDown;
                @CameraUpDown.performed -= m_Wrapper.m_ShipActionsCallbackInterface.OnCameraUpDown;
                @CameraUpDown.canceled -= m_Wrapper.m_ShipActionsCallbackInterface.OnCameraUpDown;
                @CameraReset.started -= m_Wrapper.m_ShipActionsCallbackInterface.OnCameraReset;
                @CameraReset.performed -= m_Wrapper.m_ShipActionsCallbackInterface.OnCameraReset;
                @CameraReset.canceled -= m_Wrapper.m_ShipActionsCallbackInterface.OnCameraReset;
                @MouseControl.started -= m_Wrapper.m_ShipActionsCallbackInterface.OnMouseControl;
                @MouseControl.performed -= m_Wrapper.m_ShipActionsCallbackInterface.OnMouseControl;
                @MouseControl.canceled -= m_Wrapper.m_ShipActionsCallbackInterface.OnMouseControl;
            }
            m_Wrapper.m_ShipActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Roll.started += instance.OnRoll;
                @Roll.performed += instance.OnRoll;
                @Roll.canceled += instance.OnRoll;
                @Thrust.started += instance.OnThrust;
                @Thrust.performed += instance.OnThrust;
                @Thrust.canceled += instance.OnThrust;
                @PitchYaw.started += instance.OnPitchYaw;
                @PitchYaw.performed += instance.OnPitchYaw;
                @PitchYaw.canceled += instance.OnPitchYaw;
                @Brake.started += instance.OnBrake;
                @Brake.performed += instance.OnBrake;
                @Brake.canceled += instance.OnBrake;
                @Strafe.started += instance.OnStrafe;
                @Strafe.performed += instance.OnStrafe;
                @Strafe.canceled += instance.OnStrafe;
                @CameraSide.started += instance.OnCameraSide;
                @CameraSide.performed += instance.OnCameraSide;
                @CameraSide.canceled += instance.OnCameraSide;
                @CameraUpDown.started += instance.OnCameraUpDown;
                @CameraUpDown.performed += instance.OnCameraUpDown;
                @CameraUpDown.canceled += instance.OnCameraUpDown;
                @CameraReset.started += instance.OnCameraReset;
                @CameraReset.performed += instance.OnCameraReset;
                @CameraReset.canceled += instance.OnCameraReset;
                @MouseControl.started += instance.OnMouseControl;
                @MouseControl.performed += instance.OnMouseControl;
                @MouseControl.canceled += instance.OnMouseControl;
            }
        }
    }
    public ShipActions @Ship => new ShipActions(this);
    public interface IShipActions
    {
        void OnRoll(InputAction.CallbackContext context);
        void OnThrust(InputAction.CallbackContext context);
        void OnPitchYaw(InputAction.CallbackContext context);
        void OnBrake(InputAction.CallbackContext context);
        void OnStrafe(InputAction.CallbackContext context);
        void OnCameraSide(InputAction.CallbackContext context);
        void OnCameraUpDown(InputAction.CallbackContext context);
        void OnCameraReset(InputAction.CallbackContext context);
        void OnMouseControl(InputAction.CallbackContext context);
    }
}
